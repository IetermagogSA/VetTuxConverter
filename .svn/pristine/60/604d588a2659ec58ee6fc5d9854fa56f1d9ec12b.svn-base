<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVetTux.Glyph" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>