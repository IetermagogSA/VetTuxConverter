#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VetTux_Converter.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Vetmaster")]
	public partial class VetmasterDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBreed(Breed instance);
    partial void UpdateBreed(Breed instance);
    partial void DeleteBreed(Breed instance);
    partial void InsertCompanyInfo(CompanyInfo instance);
    partial void UpdateCompanyInfo(CompanyInfo instance);
    partial void DeleteCompanyInfo(CompanyInfo instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertInventoryCategory(InventoryCategory instance);
    partial void UpdateInventoryCategory(InventoryCategory instance);
    partial void DeleteInventoryCategory(InventoryCategory instance);
    partial void InsertInventorySupplier(InventorySupplier instance);
    partial void UpdateInventorySupplier(InventorySupplier instance);
    partial void DeleteInventorySupplier(InventorySupplier instance);
    partial void InsertNewPatientReminder(NewPatientReminder instance);
    partial void UpdateNewPatientReminder(NewPatientReminder instance);
    partial void DeleteNewPatientReminder(NewPatientReminder instance);
    partial void InsertPatientNote(PatientNote instance);
    partial void UpdatePatientNote(PatientNote instance);
    partial void DeletePatientNote(PatientNote instance);
    partial void InsertSale(Sale instance);
    partial void UpdateSale(Sale instance);
    partial void DeleteSale(Sale instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertCustomerTitle(CustomerTitle instance);
    partial void UpdateCustomerTitle(CustomerTitle instance);
    partial void DeleteCustomerTitle(CustomerTitle instance);
    partial void InsertWeight(Weight instance);
    partial void UpdateWeight(Weight instance);
    partial void DeleteWeight(Weight instance);
    partial void InsertAdjustment(Adjustment instance);
    partial void UpdateAdjustment(Adjustment instance);
    partial void DeleteAdjustment(Adjustment instance);
    partial void InsertTax(Tax instance);
    partial void UpdateTax(Tax instance);
    partial void DeleteTax(Tax instance);
    partial void InsertSpecie(Specie instance);
    partial void UpdateSpecie(Specie instance);
    partial void DeleteSpecie(Specie instance);
    #endregion
		
		public VetmasterDataContextDataContext() : 
				base(global::VetTux_Converter.Properties.Settings.Default.VetmasterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VetmasterDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VetmasterDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VetmasterDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VetmasterDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Breed> Breeds
		{
			get
			{
				return this.GetTable<Breed>();
			}
		}
		
		public System.Data.Linq.Table<CompanyInfo> CompanyInfos
		{
			get
			{
				return this.GetTable<CompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Inventory> Inventories
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<InventoryCategory> InventoryCategories
		{
			get
			{
				return this.GetTable<InventoryCategory>();
			}
		}
		
		public System.Data.Linq.Table<InventorySupplier> InventorySuppliers
		{
			get
			{
				return this.GetTable<InventorySupplier>();
			}
		}
		
		public System.Data.Linq.Table<NewPatientReminder> NewPatientReminders
		{
			get
			{
				return this.GetTable<NewPatientReminder>();
			}
		}
		
		public System.Data.Linq.Table<PatientNote> PatientNotes
		{
			get
			{
				return this.GetTable<PatientNote>();
			}
		}
		
		public System.Data.Linq.Table<Sale> Sales
		{
			get
			{
				return this.GetTable<Sale>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<CustomerTitle> CustomerTitles
		{
			get
			{
				return this.GetTable<CustomerTitle>();
			}
		}
		
		public System.Data.Linq.Table<Weight> Weights
		{
			get
			{
				return this.GetTable<Weight>();
			}
		}
		
		public System.Data.Linq.Table<Adjustment> Adjustments
		{
			get
			{
				return this.GetTable<Adjustment>();
			}
		}
		
		public System.Data.Linq.Table<Tax> Taxes
		{
			get
			{
				return this.GetTable<Tax>();
			}
		}
		
		public System.Data.Linq.Table<Specie> Species
		{
			get
			{
				return this.GetTable<Specie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Breed")]
	public partial class Breed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SpecieID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntitySet<Patient> _Patients;
		
		private EntityRef<Specie> _Specie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpecieIDChanging(int value);
    partial void OnSpecieIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public Breed()
		{
			this._Patients = new EntitySet<Patient>(new Action<Patient>(this.attach_Patients), new Action<Patient>(this.detach_Patients));
			this._Specie = default(EntityRef<Specie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecieID", DbType="Int NOT NULL")]
		public int SpecieID
		{
			get
			{
				return this._SpecieID;
			}
			set
			{
				if ((this._SpecieID != value))
				{
					if (this._Specie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecieIDChanging(value);
					this.SendPropertyChanging();
					this._SpecieID = value;
					this.SendPropertyChanged("SpecieID");
					this.OnSpecieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Breed_Patient", Storage="_Patients", ThisKey="ID", OtherKey="BreedID")]
		public EntitySet<Patient> Patients
		{
			get
			{
				return this._Patients;
			}
			set
			{
				this._Patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specie_Breed", Storage="_Specie", ThisKey="SpecieID", OtherKey="ID", IsForeignKey=true)]
		public Specie Specie
		{
			get
			{
				return this._Specie.Entity;
			}
			set
			{
				Specie previousValue = this._Specie.Entity;
				if (((previousValue != value) 
							|| (this._Specie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specie.Entity = null;
						previousValue.Breeds.Remove(this);
					}
					this._Specie.Entity = value;
					if ((value != null))
					{
						value.Breeds.Add(this);
						this._SpecieID = value.ID;
					}
					else
					{
						this._SpecieID = default(int);
					}
					this.SendPropertyChanged("Specie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Breed = this;
		}
		
		private void detach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Breed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyInfo")]
	public partial class CompanyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _RegistrationNumber;
		
		private string _SiteNo;
		
		private string _PostalLine1;
		
		private string _PostalLine2;
		
		private string _PostalLine3;
		
		private string _PostalLine4;
		
		private string _PhysicalLine1;
		
		private string _PhysicalLine2;
		
		private string _PhysicalLine3;
		
		private string _PhysicalLine4;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Emergency;
		
		private string _EMail;
		
		private string _Website;
		
		private string _VATRegNumber;
		
		private string _TradingHours;
		
		private string _PromoMessage;
		
		private string _QuickSaleMessage;
		
		private string _InvoiceMessage;
		
		private string _StatementMessage;
		
		private string _ReceiptMessage;
		
		private string _EstimateMessage;
		
		private System.Data.Linq.Binary _Logo;
		
		private string _BankingDetails;
		
		private string _POBillTo;
		
		private string _PODeliverTo;
		
		private decimal _Rounding;
		
		private decimal _InventoryPriceRounding;
		
		private string _BarCodeType;
		
		private string _AttachmentFolder;
		
		private string _MailServer;
		
		private System.Nullable<int> _MailServerPort;
		
		private string _MailUsername;
		
		private string _MailPassword;
		
		private System.Nullable<bool> _MailEnableSSL;
		
		private string _SmsUser;
		
		private string _SmsPassword;
		
		private string _BackupDirectory;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegistrationNumberChanging(string value);
    partial void OnRegistrationNumberChanged();
    partial void OnSiteNoChanging(string value);
    partial void OnSiteNoChanged();
    partial void OnPostalLine1Changing(string value);
    partial void OnPostalLine1Changed();
    partial void OnPostalLine2Changing(string value);
    partial void OnPostalLine2Changed();
    partial void OnPostalLine3Changing(string value);
    partial void OnPostalLine3Changed();
    partial void OnPostalLine4Changing(string value);
    partial void OnPostalLine4Changed();
    partial void OnPhysicalLine1Changing(string value);
    partial void OnPhysicalLine1Changed();
    partial void OnPhysicalLine2Changing(string value);
    partial void OnPhysicalLine2Changed();
    partial void OnPhysicalLine3Changing(string value);
    partial void OnPhysicalLine3Changed();
    partial void OnPhysicalLine4Changing(string value);
    partial void OnPhysicalLine4Changed();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmergencyChanging(string value);
    partial void OnEmergencyChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnVATRegNumberChanging(string value);
    partial void OnVATRegNumberChanged();
    partial void OnTradingHoursChanging(string value);
    partial void OnTradingHoursChanged();
    partial void OnPromoMessageChanging(string value);
    partial void OnPromoMessageChanged();
    partial void OnQuickSaleMessageChanging(string value);
    partial void OnQuickSaleMessageChanged();
    partial void OnInvoiceMessageChanging(string value);
    partial void OnInvoiceMessageChanged();
    partial void OnStatementMessageChanging(string value);
    partial void OnStatementMessageChanged();
    partial void OnReceiptMessageChanging(string value);
    partial void OnReceiptMessageChanged();
    partial void OnEstimateMessageChanging(string value);
    partial void OnEstimateMessageChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    partial void OnBankingDetailsChanging(string value);
    partial void OnBankingDetailsChanged();
    partial void OnPOBillToChanging(string value);
    partial void OnPOBillToChanged();
    partial void OnPODeliverToChanging(string value);
    partial void OnPODeliverToChanged();
    partial void OnRoundingChanging(decimal value);
    partial void OnRoundingChanged();
    partial void OnInventoryPriceRoundingChanging(decimal value);
    partial void OnInventoryPriceRoundingChanged();
    partial void OnBarCodeTypeChanging(string value);
    partial void OnBarCodeTypeChanged();
    partial void OnAttachmentFolderChanging(string value);
    partial void OnAttachmentFolderChanged();
    partial void OnMailServerChanging(string value);
    partial void OnMailServerChanged();
    partial void OnMailServerPortChanging(System.Nullable<int> value);
    partial void OnMailServerPortChanged();
    partial void OnMailUsernameChanging(string value);
    partial void OnMailUsernameChanged();
    partial void OnMailPasswordChanging(string value);
    partial void OnMailPasswordChanged();
    partial void OnMailEnableSSLChanging(System.Nullable<bool> value);
    partial void OnMailEnableSSLChanged();
    partial void OnSmsUserChanging(string value);
    partial void OnSmsUserChanged();
    partial void OnSmsPasswordChanging(string value);
    partial void OnSmsPasswordChanged();
    partial void OnBackupDirectoryChanging(string value);
    partial void OnBackupDirectoryChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public CompanyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="VarChar(50)")]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this.OnRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumber = value;
					this.SendPropertyChanged("RegistrationNumber");
					this.OnRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteNo", DbType="VarChar(50)")]
		public string SiteNo
		{
			get
			{
				return this._SiteNo;
			}
			set
			{
				if ((this._SiteNo != value))
				{
					this.OnSiteNoChanging(value);
					this.SendPropertyChanging();
					this._SiteNo = value;
					this.SendPropertyChanged("SiteNo");
					this.OnSiteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine1", DbType="VarChar(100)")]
		public string PostalLine1
		{
			get
			{
				return this._PostalLine1;
			}
			set
			{
				if ((this._PostalLine1 != value))
				{
					this.OnPostalLine1Changing(value);
					this.SendPropertyChanging();
					this._PostalLine1 = value;
					this.SendPropertyChanged("PostalLine1");
					this.OnPostalLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine2", DbType="VarChar(100)")]
		public string PostalLine2
		{
			get
			{
				return this._PostalLine2;
			}
			set
			{
				if ((this._PostalLine2 != value))
				{
					this.OnPostalLine2Changing(value);
					this.SendPropertyChanging();
					this._PostalLine2 = value;
					this.SendPropertyChanged("PostalLine2");
					this.OnPostalLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine3", DbType="VarChar(100)")]
		public string PostalLine3
		{
			get
			{
				return this._PostalLine3;
			}
			set
			{
				if ((this._PostalLine3 != value))
				{
					this.OnPostalLine3Changing(value);
					this.SendPropertyChanging();
					this._PostalLine3 = value;
					this.SendPropertyChanged("PostalLine3");
					this.OnPostalLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine4", DbType="VarChar(100)")]
		public string PostalLine4
		{
			get
			{
				return this._PostalLine4;
			}
			set
			{
				if ((this._PostalLine4 != value))
				{
					this.OnPostalLine4Changing(value);
					this.SendPropertyChanging();
					this._PostalLine4 = value;
					this.SendPropertyChanged("PostalLine4");
					this.OnPostalLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine1", DbType="VarChar(100)")]
		public string PhysicalLine1
		{
			get
			{
				return this._PhysicalLine1;
			}
			set
			{
				if ((this._PhysicalLine1 != value))
				{
					this.OnPhysicalLine1Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine1 = value;
					this.SendPropertyChanged("PhysicalLine1");
					this.OnPhysicalLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine2", DbType="VarChar(100)")]
		public string PhysicalLine2
		{
			get
			{
				return this._PhysicalLine2;
			}
			set
			{
				if ((this._PhysicalLine2 != value))
				{
					this.OnPhysicalLine2Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine2 = value;
					this.SendPropertyChanged("PhysicalLine2");
					this.OnPhysicalLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine3", DbType="VarChar(100)")]
		public string PhysicalLine3
		{
			get
			{
				return this._PhysicalLine3;
			}
			set
			{
				if ((this._PhysicalLine3 != value))
				{
					this.OnPhysicalLine3Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine3 = value;
					this.SendPropertyChanged("PhysicalLine3");
					this.OnPhysicalLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine4", DbType="VarChar(100)")]
		public string PhysicalLine4
		{
			get
			{
				return this._PhysicalLine4;
			}
			set
			{
				if ((this._PhysicalLine4 != value))
				{
					this.OnPhysicalLine4Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine4 = value;
					this.SendPropertyChanged("PhysicalLine4");
					this.OnPhysicalLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emergency", DbType="VarChar(100)")]
		public string Emergency
		{
			get
			{
				return this._Emergency;
			}
			set
			{
				if ((this._Emergency != value))
				{
					this.OnEmergencyChanging(value);
					this.SendPropertyChanging();
					this._Emergency = value;
					this.SendPropertyChanged("Emergency");
					this.OnEmergencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="VarChar(100)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATRegNumber", DbType="VarChar(100)")]
		public string VATRegNumber
		{
			get
			{
				return this._VATRegNumber;
			}
			set
			{
				if ((this._VATRegNumber != value))
				{
					this.OnVATRegNumberChanging(value);
					this.SendPropertyChanging();
					this._VATRegNumber = value;
					this.SendPropertyChanged("VATRegNumber");
					this.OnVATRegNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradingHours", DbType="VarChar(500)")]
		public string TradingHours
		{
			get
			{
				return this._TradingHours;
			}
			set
			{
				if ((this._TradingHours != value))
				{
					this.OnTradingHoursChanging(value);
					this.SendPropertyChanging();
					this._TradingHours = value;
					this.SendPropertyChanged("TradingHours");
					this.OnTradingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoMessage", DbType="VarChar(500)")]
		public string PromoMessage
		{
			get
			{
				return this._PromoMessage;
			}
			set
			{
				if ((this._PromoMessage != value))
				{
					this.OnPromoMessageChanging(value);
					this.SendPropertyChanging();
					this._PromoMessage = value;
					this.SendPropertyChanged("PromoMessage");
					this.OnPromoMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickSaleMessage", DbType="VarChar(500)")]
		public string QuickSaleMessage
		{
			get
			{
				return this._QuickSaleMessage;
			}
			set
			{
				if ((this._QuickSaleMessage != value))
				{
					this.OnQuickSaleMessageChanging(value);
					this.SendPropertyChanging();
					this._QuickSaleMessage = value;
					this.SendPropertyChanged("QuickSaleMessage");
					this.OnQuickSaleMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceMessage", DbType="VarChar(500)")]
		public string InvoiceMessage
		{
			get
			{
				return this._InvoiceMessage;
			}
			set
			{
				if ((this._InvoiceMessage != value))
				{
					this.OnInvoiceMessageChanging(value);
					this.SendPropertyChanging();
					this._InvoiceMessage = value;
					this.SendPropertyChanged("InvoiceMessage");
					this.OnInvoiceMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatementMessage", DbType="VarChar(500)")]
		public string StatementMessage
		{
			get
			{
				return this._StatementMessage;
			}
			set
			{
				if ((this._StatementMessage != value))
				{
					this.OnStatementMessageChanging(value);
					this.SendPropertyChanging();
					this._StatementMessage = value;
					this.SendPropertyChanged("StatementMessage");
					this.OnStatementMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptMessage", DbType="VarChar(500)")]
		public string ReceiptMessage
		{
			get
			{
				return this._ReceiptMessage;
			}
			set
			{
				if ((this._ReceiptMessage != value))
				{
					this.OnReceiptMessageChanging(value);
					this.SendPropertyChanging();
					this._ReceiptMessage = value;
					this.SendPropertyChanged("ReceiptMessage");
					this.OnReceiptMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateMessage", DbType="VarChar(500)")]
		public string EstimateMessage
		{
			get
			{
				return this._EstimateMessage;
			}
			set
			{
				if ((this._EstimateMessage != value))
				{
					this.OnEstimateMessageChanging(value);
					this.SendPropertyChanging();
					this._EstimateMessage = value;
					this.SendPropertyChanged("EstimateMessage");
					this.OnEstimateMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankingDetails", DbType="VarChar(500)")]
		public string BankingDetails
		{
			get
			{
				return this._BankingDetails;
			}
			set
			{
				if ((this._BankingDetails != value))
				{
					this.OnBankingDetailsChanging(value);
					this.SendPropertyChanging();
					this._BankingDetails = value;
					this.SendPropertyChanged("BankingDetails");
					this.OnBankingDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POBillTo", DbType="VarChar(400)")]
		public string POBillTo
		{
			get
			{
				return this._POBillTo;
			}
			set
			{
				if ((this._POBillTo != value))
				{
					this.OnPOBillToChanging(value);
					this.SendPropertyChanging();
					this._POBillTo = value;
					this.SendPropertyChanged("POBillTo");
					this.OnPOBillToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODeliverTo", DbType="VarChar(400)")]
		public string PODeliverTo
		{
			get
			{
				return this._PODeliverTo;
			}
			set
			{
				if ((this._PODeliverTo != value))
				{
					this.OnPODeliverToChanging(value);
					this.SendPropertyChanging();
					this._PODeliverTo = value;
					this.SendPropertyChanged("PODeliverTo");
					this.OnPODeliverToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rounding", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rounding
		{
			get
			{
				return this._Rounding;
			}
			set
			{
				if ((this._Rounding != value))
				{
					this.OnRoundingChanging(value);
					this.SendPropertyChanging();
					this._Rounding = value;
					this.SendPropertyChanged("Rounding");
					this.OnRoundingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryPriceRounding", DbType="Decimal(18,2) NOT NULL")]
		public decimal InventoryPriceRounding
		{
			get
			{
				return this._InventoryPriceRounding;
			}
			set
			{
				if ((this._InventoryPriceRounding != value))
				{
					this.OnInventoryPriceRoundingChanging(value);
					this.SendPropertyChanging();
					this._InventoryPriceRounding = value;
					this.SendPropertyChanged("InventoryPriceRounding");
					this.OnInventoryPriceRoundingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCodeType", DbType="VarChar(50)")]
		public string BarCodeType
		{
			get
			{
				return this._BarCodeType;
			}
			set
			{
				if ((this._BarCodeType != value))
				{
					this.OnBarCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._BarCodeType = value;
					this.SendPropertyChanged("BarCodeType");
					this.OnBarCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFolder", DbType="VarChar(200)")]
		public string AttachmentFolder
		{
			get
			{
				return this._AttachmentFolder;
			}
			set
			{
				if ((this._AttachmentFolder != value))
				{
					this.OnAttachmentFolderChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFolder = value;
					this.SendPropertyChanged("AttachmentFolder");
					this.OnAttachmentFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailServer", DbType="VarChar(128)")]
		public string MailServer
		{
			get
			{
				return this._MailServer;
			}
			set
			{
				if ((this._MailServer != value))
				{
					this.OnMailServerChanging(value);
					this.SendPropertyChanging();
					this._MailServer = value;
					this.SendPropertyChanged("MailServer");
					this.OnMailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailServerPort", DbType="Int")]
		public System.Nullable<int> MailServerPort
		{
			get
			{
				return this._MailServerPort;
			}
			set
			{
				if ((this._MailServerPort != value))
				{
					this.OnMailServerPortChanging(value);
					this.SendPropertyChanging();
					this._MailServerPort = value;
					this.SendPropertyChanged("MailServerPort");
					this.OnMailServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailUsername", DbType="VarChar(128)")]
		public string MailUsername
		{
			get
			{
				return this._MailUsername;
			}
			set
			{
				if ((this._MailUsername != value))
				{
					this.OnMailUsernameChanging(value);
					this.SendPropertyChanging();
					this._MailUsername = value;
					this.SendPropertyChanged("MailUsername");
					this.OnMailUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailPassword", DbType="VarChar(128)")]
		public string MailPassword
		{
			get
			{
				return this._MailPassword;
			}
			set
			{
				if ((this._MailPassword != value))
				{
					this.OnMailPasswordChanging(value);
					this.SendPropertyChanging();
					this._MailPassword = value;
					this.SendPropertyChanged("MailPassword");
					this.OnMailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailEnableSSL", DbType="Bit")]
		public System.Nullable<bool> MailEnableSSL
		{
			get
			{
				return this._MailEnableSSL;
			}
			set
			{
				if ((this._MailEnableSSL != value))
				{
					this.OnMailEnableSSLChanging(value);
					this.SendPropertyChanging();
					this._MailEnableSSL = value;
					this.SendPropertyChanged("MailEnableSSL");
					this.OnMailEnableSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsUser", DbType="VarChar(50)")]
		public string SmsUser
		{
			get
			{
				return this._SmsUser;
			}
			set
			{
				if ((this._SmsUser != value))
				{
					this.OnSmsUserChanging(value);
					this.SendPropertyChanging();
					this._SmsUser = value;
					this.SendPropertyChanged("SmsUser");
					this.OnSmsUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsPassword", DbType="VarChar(50)")]
		public string SmsPassword
		{
			get
			{
				return this._SmsPassword;
			}
			set
			{
				if ((this._SmsPassword != value))
				{
					this.OnSmsPasswordChanging(value);
					this.SendPropertyChanging();
					this._SmsPassword = value;
					this.SendPropertyChanged("SmsPassword");
					this.OnSmsPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupDirectory", DbType="VarChar(255)")]
		public string BackupDirectory
		{
			get
			{
				return this._BackupDirectory;
			}
			set
			{
				if ((this._BackupDirectory != value))
				{
					this.OnBackupDirectoryChanging(value);
					this.SendPropertyChanging();
					this._BackupDirectory = value;
					this.SendPropertyChanged("BackupDirectory");
					this.OnBackupDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TitleID;
		
		private int _LanguageID;
		
		private int _TermsID;
		
		private int _StatusID;
		
		private int _ProfileID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Code;
		
		private string _IDNumber;
		
		private string _PostalLine1;
		
		private string _PostalLine2;
		
		private string _PostalLine3;
		
		private string _PostalLine4;
		
		private string _PhysicalLine1;
		
		private string _PhysicalLine2;
		
		private string _PhysicalLine3;
		
		private string _PhysicalLine4;
		
		private string _CellPhone;
		
		private string _HomePhone;
		
		private string _WorkPhone;
		
		private string _Fax;
		
		private string _EMail;
		
		private string _VATNumber;
		
		private string _VehicleReg;
		
		private string _Comment;
		
		private bool _BillToPostal;
		
		private bool _BillToPhysical;
		
		private bool _BillToEMail;
		
		private bool _Syndicate;
		
		private bool _CreditLimitation;
		
		private decimal _CreditLimit;
		
		private bool _IsLoyalty;
		
		private int _TotalLoyaltyPoints;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _Updated;
		
		private System.Guid _Version;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private bool _Booked;
		
		private EntitySet<Sale> _Sales;
		
		private EntitySet<Patient> _Patients;
		
		private EntityRef<CustomerTitle> _CustomerTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleIDChanging(int value);
    partial void OnTitleIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnTermsIDChanging(int value);
    partial void OnTermsIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIDNumberChanging(string value);
    partial void OnIDNumberChanged();
    partial void OnPostalLine1Changing(string value);
    partial void OnPostalLine1Changed();
    partial void OnPostalLine2Changing(string value);
    partial void OnPostalLine2Changed();
    partial void OnPostalLine3Changing(string value);
    partial void OnPostalLine3Changed();
    partial void OnPostalLine4Changing(string value);
    partial void OnPostalLine4Changed();
    partial void OnPhysicalLine1Changing(string value);
    partial void OnPhysicalLine1Changed();
    partial void OnPhysicalLine2Changing(string value);
    partial void OnPhysicalLine2Changed();
    partial void OnPhysicalLine3Changing(string value);
    partial void OnPhysicalLine3Changed();
    partial void OnPhysicalLine4Changing(string value);
    partial void OnPhysicalLine4Changed();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnVATNumberChanging(string value);
    partial void OnVATNumberChanged();
    partial void OnVehicleRegChanging(string value);
    partial void OnVehicleRegChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnBillToPostalChanging(bool value);
    partial void OnBillToPostalChanged();
    partial void OnBillToPhysicalChanging(bool value);
    partial void OnBillToPhysicalChanged();
    partial void OnBillToEMailChanging(bool value);
    partial void OnBillToEMailChanged();
    partial void OnSyndicateChanging(bool value);
    partial void OnSyndicateChanged();
    partial void OnCreditLimitationChanging(bool value);
    partial void OnCreditLimitationChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnIsLoyaltyChanging(bool value);
    partial void OnIsLoyaltyChanged();
    partial void OnTotalLoyaltyPointsChanging(int value);
    partial void OnTotalLoyaltyPointsChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdatedChanging(System.DateTime value);
    partial void OnUpdatedChanged();
    partial void OnVersionChanging(System.Guid value);
    partial void OnVersionChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnBookedChanging(bool value);
    partial void OnBookedChanged();
    #endregion
		
		public Customer()
		{
			this._Sales = new EntitySet<Sale>(new Action<Sale>(this.attach_Sales), new Action<Sale>(this.detach_Sales));
			this._Patients = new EntitySet<Patient>(new Action<Patient>(this.attach_Patients), new Action<Patient>(this.detach_Patients));
			this._CustomerTitle = default(EntityRef<CustomerTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="Int NOT NULL")]
		public int TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					if (this._CustomerTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsID", DbType="Int NOT NULL")]
		public int TermsID
		{
			get
			{
				return this._TermsID;
			}
			set
			{
				if ((this._TermsID != value))
				{
					this.OnTermsIDChanging(value);
					this.SendPropertyChanging();
					this._TermsID = value;
					this.SendPropertyChanged("TermsID");
					this.OnTermsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="VarChar(50)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine1", DbType="VarChar(50)")]
		public string PostalLine1
		{
			get
			{
				return this._PostalLine1;
			}
			set
			{
				if ((this._PostalLine1 != value))
				{
					this.OnPostalLine1Changing(value);
					this.SendPropertyChanging();
					this._PostalLine1 = value;
					this.SendPropertyChanged("PostalLine1");
					this.OnPostalLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine2", DbType="VarChar(50)")]
		public string PostalLine2
		{
			get
			{
				return this._PostalLine2;
			}
			set
			{
				if ((this._PostalLine2 != value))
				{
					this.OnPostalLine2Changing(value);
					this.SendPropertyChanging();
					this._PostalLine2 = value;
					this.SendPropertyChanged("PostalLine2");
					this.OnPostalLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine3", DbType="VarChar(50)")]
		public string PostalLine3
		{
			get
			{
				return this._PostalLine3;
			}
			set
			{
				if ((this._PostalLine3 != value))
				{
					this.OnPostalLine3Changing(value);
					this.SendPropertyChanging();
					this._PostalLine3 = value;
					this.SendPropertyChanged("PostalLine3");
					this.OnPostalLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalLine4", DbType="VarChar(50)")]
		public string PostalLine4
		{
			get
			{
				return this._PostalLine4;
			}
			set
			{
				if ((this._PostalLine4 != value))
				{
					this.OnPostalLine4Changing(value);
					this.SendPropertyChanging();
					this._PostalLine4 = value;
					this.SendPropertyChanged("PostalLine4");
					this.OnPostalLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine1", DbType="VarChar(50)")]
		public string PhysicalLine1
		{
			get
			{
				return this._PhysicalLine1;
			}
			set
			{
				if ((this._PhysicalLine1 != value))
				{
					this.OnPhysicalLine1Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine1 = value;
					this.SendPropertyChanged("PhysicalLine1");
					this.OnPhysicalLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine2", DbType="VarChar(50)")]
		public string PhysicalLine2
		{
			get
			{
				return this._PhysicalLine2;
			}
			set
			{
				if ((this._PhysicalLine2 != value))
				{
					this.OnPhysicalLine2Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine2 = value;
					this.SendPropertyChanged("PhysicalLine2");
					this.OnPhysicalLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine3", DbType="VarChar(50)")]
		public string PhysicalLine3
		{
			get
			{
				return this._PhysicalLine3;
			}
			set
			{
				if ((this._PhysicalLine3 != value))
				{
					this.OnPhysicalLine3Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine3 = value;
					this.SendPropertyChanged("PhysicalLine3");
					this.OnPhysicalLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLine4", DbType="VarChar(50)")]
		public string PhysicalLine4
		{
			get
			{
				return this._PhysicalLine4;
			}
			set
			{
				if ((this._PhysicalLine4 != value))
				{
					this.OnPhysicalLine4Changing(value);
					this.SendPropertyChanging();
					this._PhysicalLine4 = value;
					this.SendPropertyChanged("PhysicalLine4");
					this.OnPhysicalLine4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(50)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(50)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="VarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATNumber", DbType="VarChar(50)")]
		public string VATNumber
		{
			get
			{
				return this._VATNumber;
			}
			set
			{
				if ((this._VATNumber != value))
				{
					this.OnVATNumberChanging(value);
					this.SendPropertyChanging();
					this._VATNumber = value;
					this.SendPropertyChanged("VATNumber");
					this.OnVATNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleReg", DbType="VarChar(50)")]
		public string VehicleReg
		{
			get
			{
				return this._VehicleReg;
			}
			set
			{
				if ((this._VehicleReg != value))
				{
					this.OnVehicleRegChanging(value);
					this.SendPropertyChanging();
					this._VehicleReg = value;
					this.SendPropertyChanged("VehicleReg");
					this.OnVehicleRegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToPostal", DbType="Bit NOT NULL")]
		public bool BillToPostal
		{
			get
			{
				return this._BillToPostal;
			}
			set
			{
				if ((this._BillToPostal != value))
				{
					this.OnBillToPostalChanging(value);
					this.SendPropertyChanging();
					this._BillToPostal = value;
					this.SendPropertyChanged("BillToPostal");
					this.OnBillToPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToPhysical", DbType="Bit NOT NULL")]
		public bool BillToPhysical
		{
			get
			{
				return this._BillToPhysical;
			}
			set
			{
				if ((this._BillToPhysical != value))
				{
					this.OnBillToPhysicalChanging(value);
					this.SendPropertyChanging();
					this._BillToPhysical = value;
					this.SendPropertyChanged("BillToPhysical");
					this.OnBillToPhysicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToEMail", DbType="Bit NOT NULL")]
		public bool BillToEMail
		{
			get
			{
				return this._BillToEMail;
			}
			set
			{
				if ((this._BillToEMail != value))
				{
					this.OnBillToEMailChanging(value);
					this.SendPropertyChanging();
					this._BillToEMail = value;
					this.SendPropertyChanged("BillToEMail");
					this.OnBillToEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Syndicate", DbType="Bit NOT NULL")]
		public bool Syndicate
		{
			get
			{
				return this._Syndicate;
			}
			set
			{
				if ((this._Syndicate != value))
				{
					this.OnSyndicateChanging(value);
					this.SendPropertyChanging();
					this._Syndicate = value;
					this.SendPropertyChanged("Syndicate");
					this.OnSyndicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimitation", DbType="Bit NOT NULL")]
		public bool CreditLimitation
		{
			get
			{
				return this._CreditLimitation;
			}
			set
			{
				if ((this._CreditLimitation != value))
				{
					this.OnCreditLimitationChanging(value);
					this.SendPropertyChanging();
					this._CreditLimitation = value;
					this.SendPropertyChanged("CreditLimitation");
					this.OnCreditLimitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Money NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoyalty", DbType="Bit NOT NULL")]
		public bool IsLoyalty
		{
			get
			{
				return this._IsLoyalty;
			}
			set
			{
				if ((this._IsLoyalty != value))
				{
					this.OnIsLoyaltyChanging(value);
					this.SendPropertyChanging();
					this._IsLoyalty = value;
					this.SendPropertyChanged("IsLoyalty");
					this.OnIsLoyaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLoyaltyPoints", DbType="Int NOT NULL")]
		public int TotalLoyaltyPoints
		{
			get
			{
				return this._TotalLoyaltyPoints;
			}
			set
			{
				if ((this._TotalLoyaltyPoints != value))
				{
					this.OnTotalLoyaltyPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalLoyaltyPoints = value;
					this.SendPropertyChanged("TotalLoyaltyPoints");
					this.OnTotalLoyaltyPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime NOT NULL")]
		public System.DateTime Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Booked", DbType="Bit NOT NULL")]
		public bool Booked
		{
			get
			{
				return this._Booked;
			}
			set
			{
				if ((this._Booked != value))
				{
					this.OnBookedChanging(value);
					this.SendPropertyChanging();
					this._Booked = value;
					this.SendPropertyChanged("Booked");
					this.OnBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Sale", Storage="_Sales", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Sale> Sales
		{
			get
			{
				return this._Sales;
			}
			set
			{
				this._Sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Patient", Storage="_Patients", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Patient> Patients
		{
			get
			{
				return this._Patients;
			}
			set
			{
				this._Patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTitle_Customer", Storage="_CustomerTitle", ThisKey="TitleID", OtherKey="ID", IsForeignKey=true)]
		public CustomerTitle CustomerTitle
		{
			get
			{
				return this._CustomerTitle.Entity;
			}
			set
			{
				CustomerTitle previousValue = this._CustomerTitle.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTitle.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerTitle.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._TitleID = value.ID;
					}
					else
					{
						this._TitleID = default(int);
					}
					this.SendPropertyChanged("CustomerTitle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sales(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Sales(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Patients(Patient entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private int _TaxID;
		
		private int _UnitID;
		
		private System.Nullable<int> _ScheduleID;
		
		private string _Description;
		
		private string _Code;
		
		private string _BarCode;
		
		private bool _Grouped;
		
		private bool _ItemPricing;
		
		private bool _ShowItems;
		
		private bool _ShowItemPricing;
		
		private decimal _UnitPriceExclusive;
		
		private decimal _MarkUp;
		
		private decimal _SellingPriceExclusive;
		
		private decimal _SellingTaxAmount;
		
		private decimal _SellingPriceInclusive;
		
		private bool _TrackLevels;
		
		private int _ReOrderLevel;
		
		private decimal _MaxLevel;
		
		private decimal _OnHand;
		
		private bool _Discontinued;
		
		private string _Comment;
		
		private string _DosageInterval;
		
		private int _OrderFactor;
		
		private string _FactorName;
		
		private System.DateTime _CreateDate;
		
		private bool _CreateSaleReminder;
		
		private string _ReminderMessage;
		
		private int _ReminderDays;
		
		private int _ReminderLeadDays;
		
		private bool _ApplyLoyalty;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private int _BranchID;
		
		private bool _CheckBatch;
		
		private EntitySet<InventorySupplier> _InventorySuppliers;
		
		private EntitySet<Adjustment> _Adjustments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnTaxIDChanging(int value);
    partial void OnTaxIDChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnScheduleIDChanging(System.Nullable<int> value);
    partial void OnScheduleIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnGroupedChanging(bool value);
    partial void OnGroupedChanged();
    partial void OnItemPricingChanging(bool value);
    partial void OnItemPricingChanged();
    partial void OnShowItemsChanging(bool value);
    partial void OnShowItemsChanged();
    partial void OnShowItemPricingChanging(bool value);
    partial void OnShowItemPricingChanged();
    partial void OnUnitPriceExclusiveChanging(decimal value);
    partial void OnUnitPriceExclusiveChanged();
    partial void OnMarkUpChanging(decimal value);
    partial void OnMarkUpChanged();
    partial void OnSellingPriceExclusiveChanging(decimal value);
    partial void OnSellingPriceExclusiveChanged();
    partial void OnSellingTaxAmountChanging(decimal value);
    partial void OnSellingTaxAmountChanged();
    partial void OnSellingPriceInclusiveChanging(decimal value);
    partial void OnSellingPriceInclusiveChanged();
    partial void OnTrackLevelsChanging(bool value);
    partial void OnTrackLevelsChanged();
    partial void OnReOrderLevelChanging(int value);
    partial void OnReOrderLevelChanged();
    partial void OnMaxLevelChanging(decimal value);
    partial void OnMaxLevelChanged();
    partial void OnOnHandChanging(decimal value);
    partial void OnOnHandChanged();
    partial void OnDiscontinuedChanging(bool value);
    partial void OnDiscontinuedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDosageIntervalChanging(string value);
    partial void OnDosageIntervalChanged();
    partial void OnOrderFactorChanging(int value);
    partial void OnOrderFactorChanged();
    partial void OnFactorNameChanging(string value);
    partial void OnFactorNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateSaleReminderChanging(bool value);
    partial void OnCreateSaleReminderChanged();
    partial void OnReminderMessageChanging(string value);
    partial void OnReminderMessageChanged();
    partial void OnReminderDaysChanging(int value);
    partial void OnReminderDaysChanged();
    partial void OnReminderLeadDaysChanging(int value);
    partial void OnReminderLeadDaysChanged();
    partial void OnApplyLoyaltyChanging(bool value);
    partial void OnApplyLoyaltyChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnCheckBatchChanging(bool value);
    partial void OnCheckBatchChanged();
    #endregion
		
		public Inventory()
		{
			this._InventorySuppliers = new EntitySet<InventorySupplier>(new Action<InventorySupplier>(this.attach_InventorySuppliers), new Action<InventorySupplier>(this.detach_InventorySuppliers));
			this._Adjustments = new EntitySet<Adjustment>(new Action<Adjustment>(this.attach_Adjustments), new Action<Adjustment>(this.detach_Adjustments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="Int NOT NULL")]
		public int TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this.OnTaxIDChanging(value);
					this.SendPropertyChanging();
					this._TaxID = value;
					this.SendPropertyChanged("TaxID");
					this.OnTaxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
		public int UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="VarChar(50)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grouped", DbType="Bit NOT NULL")]
		public bool Grouped
		{
			get
			{
				return this._Grouped;
			}
			set
			{
				if ((this._Grouped != value))
				{
					this.OnGroupedChanging(value);
					this.SendPropertyChanging();
					this._Grouped = value;
					this.SendPropertyChanged("Grouped");
					this.OnGroupedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPricing", DbType="Bit NOT NULL")]
		public bool ItemPricing
		{
			get
			{
				return this._ItemPricing;
			}
			set
			{
				if ((this._ItemPricing != value))
				{
					this.OnItemPricingChanging(value);
					this.SendPropertyChanging();
					this._ItemPricing = value;
					this.SendPropertyChanged("ItemPricing");
					this.OnItemPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowItems", DbType="Bit NOT NULL")]
		public bool ShowItems
		{
			get
			{
				return this._ShowItems;
			}
			set
			{
				if ((this._ShowItems != value))
				{
					this.OnShowItemsChanging(value);
					this.SendPropertyChanging();
					this._ShowItems = value;
					this.SendPropertyChanged("ShowItems");
					this.OnShowItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowItemPricing", DbType="Bit NOT NULL")]
		public bool ShowItemPricing
		{
			get
			{
				return this._ShowItemPricing;
			}
			set
			{
				if ((this._ShowItemPricing != value))
				{
					this.OnShowItemPricingChanging(value);
					this.SendPropertyChanging();
					this._ShowItemPricing = value;
					this.SendPropertyChanged("ShowItemPricing");
					this.OnShowItemPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPriceExclusive", DbType="Money NOT NULL")]
		public decimal UnitPriceExclusive
		{
			get
			{
				return this._UnitPriceExclusive;
			}
			set
			{
				if ((this._UnitPriceExclusive != value))
				{
					this.OnUnitPriceExclusiveChanging(value);
					this.SendPropertyChanging();
					this._UnitPriceExclusive = value;
					this.SendPropertyChanged("UnitPriceExclusive");
					this.OnUnitPriceExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkUp", DbType="Decimal(18,10) NOT NULL")]
		public decimal MarkUp
		{
			get
			{
				return this._MarkUp;
			}
			set
			{
				if ((this._MarkUp != value))
				{
					this.OnMarkUpChanging(value);
					this.SendPropertyChanging();
					this._MarkUp = value;
					this.SendPropertyChanged("MarkUp");
					this.OnMarkUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingPriceExclusive", DbType="Decimal(18,8) NOT NULL")]
		public decimal SellingPriceExclusive
		{
			get
			{
				return this._SellingPriceExclusive;
			}
			set
			{
				if ((this._SellingPriceExclusive != value))
				{
					this.OnSellingPriceExclusiveChanging(value);
					this.SendPropertyChanging();
					this._SellingPriceExclusive = value;
					this.SendPropertyChanged("SellingPriceExclusive");
					this.OnSellingPriceExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingTaxAmount", DbType="Decimal(18,8) NOT NULL")]
		public decimal SellingTaxAmount
		{
			get
			{
				return this._SellingTaxAmount;
			}
			set
			{
				if ((this._SellingTaxAmount != value))
				{
					this.OnSellingTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._SellingTaxAmount = value;
					this.SendPropertyChanged("SellingTaxAmount");
					this.OnSellingTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellingPriceInclusive", DbType="Money NOT NULL")]
		public decimal SellingPriceInclusive
		{
			get
			{
				return this._SellingPriceInclusive;
			}
			set
			{
				if ((this._SellingPriceInclusive != value))
				{
					this.OnSellingPriceInclusiveChanging(value);
					this.SendPropertyChanging();
					this._SellingPriceInclusive = value;
					this.SendPropertyChanged("SellingPriceInclusive");
					this.OnSellingPriceInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackLevels", DbType="Bit NOT NULL")]
		public bool TrackLevels
		{
			get
			{
				return this._TrackLevels;
			}
			set
			{
				if ((this._TrackLevels != value))
				{
					this.OnTrackLevelsChanging(value);
					this.SendPropertyChanging();
					this._TrackLevels = value;
					this.SendPropertyChanged("TrackLevels");
					this.OnTrackLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOrderLevel", DbType="Int NOT NULL")]
		public int ReOrderLevel
		{
			get
			{
				return this._ReOrderLevel;
			}
			set
			{
				if ((this._ReOrderLevel != value))
				{
					this.OnReOrderLevelChanging(value);
					this.SendPropertyChanging();
					this._ReOrderLevel = value;
					this.SendPropertyChanged("ReOrderLevel");
					this.OnReOrderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLevel", DbType="Decimal(18,4) NOT NULL")]
		public decimal MaxLevel
		{
			get
			{
				return this._MaxLevel;
			}
			set
			{
				if ((this._MaxLevel != value))
				{
					this.OnMaxLevelChanging(value);
					this.SendPropertyChanging();
					this._MaxLevel = value;
					this.SendPropertyChanged("MaxLevel");
					this.OnMaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnHand", DbType="Decimal(18,4) NOT NULL")]
		public decimal OnHand
		{
			get
			{
				return this._OnHand;
			}
			set
			{
				if ((this._OnHand != value))
				{
					this.OnOnHandChanging(value);
					this.SendPropertyChanging();
					this._OnHand = value;
					this.SendPropertyChanged("OnHand");
					this.OnOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discontinued", DbType="Bit NOT NULL")]
		public bool Discontinued
		{
			get
			{
				return this._Discontinued;
			}
			set
			{
				if ((this._Discontinued != value))
				{
					this.OnDiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._Discontinued = value;
					this.SendPropertyChanged("Discontinued");
					this.OnDiscontinuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageInterval", DbType="VarChar(200)")]
		public string DosageInterval
		{
			get
			{
				return this._DosageInterval;
			}
			set
			{
				if ((this._DosageInterval != value))
				{
					this.OnDosageIntervalChanging(value);
					this.SendPropertyChanging();
					this._DosageInterval = value;
					this.SendPropertyChanged("DosageInterval");
					this.OnDosageIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderFactor", DbType="Int NOT NULL")]
		public int OrderFactor
		{
			get
			{
				return this._OrderFactor;
			}
			set
			{
				if ((this._OrderFactor != value))
				{
					this.OnOrderFactorChanging(value);
					this.SendPropertyChanging();
					this._OrderFactor = value;
					this.SendPropertyChanged("OrderFactor");
					this.OnOrderFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FactorName
		{
			get
			{
				return this._FactorName;
			}
			set
			{
				if ((this._FactorName != value))
				{
					this.OnFactorNameChanging(value);
					this.SendPropertyChanging();
					this._FactorName = value;
					this.SendPropertyChanged("FactorName");
					this.OnFactorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateSaleReminder", DbType="Bit NOT NULL")]
		public bool CreateSaleReminder
		{
			get
			{
				return this._CreateSaleReminder;
			}
			set
			{
				if ((this._CreateSaleReminder != value))
				{
					this.OnCreateSaleReminderChanging(value);
					this.SendPropertyChanging();
					this._CreateSaleReminder = value;
					this.SendPropertyChanged("CreateSaleReminder");
					this.OnCreateSaleReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderMessage", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ReminderMessage
		{
			get
			{
				return this._ReminderMessage;
			}
			set
			{
				if ((this._ReminderMessage != value))
				{
					this.OnReminderMessageChanging(value);
					this.SendPropertyChanging();
					this._ReminderMessage = value;
					this.SendPropertyChanged("ReminderMessage");
					this.OnReminderMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderDays", DbType="Int NOT NULL")]
		public int ReminderDays
		{
			get
			{
				return this._ReminderDays;
			}
			set
			{
				if ((this._ReminderDays != value))
				{
					this.OnReminderDaysChanging(value);
					this.SendPropertyChanging();
					this._ReminderDays = value;
					this.SendPropertyChanged("ReminderDays");
					this.OnReminderDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderLeadDays", DbType="Int NOT NULL")]
		public int ReminderLeadDays
		{
			get
			{
				return this._ReminderLeadDays;
			}
			set
			{
				if ((this._ReminderLeadDays != value))
				{
					this.OnReminderLeadDaysChanging(value);
					this.SendPropertyChanging();
					this._ReminderLeadDays = value;
					this.SendPropertyChanged("ReminderLeadDays");
					this.OnReminderLeadDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyLoyalty", DbType="Bit NOT NULL")]
		public bool ApplyLoyalty
		{
			get
			{
				return this._ApplyLoyalty;
			}
			set
			{
				if ((this._ApplyLoyalty != value))
				{
					this.OnApplyLoyaltyChanging(value);
					this.SendPropertyChanging();
					this._ApplyLoyalty = value;
					this.SendPropertyChanged("ApplyLoyalty");
					this.OnApplyLoyaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBatch", DbType="Bit NOT NULL")]
		public bool CheckBatch
		{
			get
			{
				return this._CheckBatch;
			}
			set
			{
				if ((this._CheckBatch != value))
				{
					this.OnCheckBatchChanging(value);
					this.SendPropertyChanging();
					this._CheckBatch = value;
					this.SendPropertyChanged("CheckBatch");
					this.OnCheckBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventorySupplier", Storage="_InventorySuppliers", ThisKey="ID", OtherKey="InventoryID")]
		public EntitySet<InventorySupplier> InventorySuppliers
		{
			get
			{
				return this._InventorySuppliers;
			}
			set
			{
				this._InventorySuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Adjustment", Storage="_Adjustments", ThisKey="ID", OtherKey="InventoryID")]
		public EntitySet<Adjustment> Adjustments
		{
			get
			{
				return this._Adjustments;
			}
			set
			{
				this._Adjustments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventorySuppliers(InventorySupplier entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = this;
		}
		
		private void detach_InventorySuppliers(InventorySupplier entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = null;
		}
		
		private void attach_Adjustments(Adjustment entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = this;
		}
		
		private void detach_Adjustments(Adjustment entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryCategory")]
	public partial class InventoryCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsService;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsServiceChanging(bool value);
    partial void OnIsServiceChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public InventoryCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsService", DbType="Bit NOT NULL")]
		public bool IsService
		{
			get
			{
				return this._IsService;
			}
			set
			{
				if ((this._IsService != value))
				{
					this.OnIsServiceChanging(value);
					this.SendPropertyChanging();
					this._IsService = value;
					this.SendPropertyChanged("IsService");
					this.OnIsServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventorySupplier")]
	public partial class InventorySupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SupplierID;
		
		private int _InventoryID;
		
		private string _Comment;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntityRef<Inventory> _Inventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public InventorySupplier()
		{
			this._Inventory = default(EntityRef<Inventory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int NOT NULL")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					if (this._Inventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventorySupplier", Storage="_Inventory", ThisKey="InventoryID", OtherKey="ID", IsForeignKey=true)]
		public Inventory Inventory
		{
			get
			{
				return this._Inventory.Entity;
			}
			set
			{
				Inventory previousValue = this._Inventory.Entity;
				if (((previousValue != value) 
							|| (this._Inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory.Entity = null;
						previousValue.InventorySuppliers.Remove(this);
					}
					this._Inventory.Entity = value;
					if ((value != null))
					{
						value.InventorySuppliers.Add(this);
						this._InventoryID = value.ID;
					}
					else
					{
						this._InventoryID = default(int);
					}
					this.SendPropertyChanged("Inventory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewPatientReminders")]
	public partial class NewPatientReminder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _PatientID;
		
		private System.Nullable<bool> _Sent;
		
		private System.Nullable<System.DateTime> _LastVaccDate;
		
		private System.DateTime _NextVaccDate;
		
		private string _Message;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnSentChanging(System.Nullable<bool> value);
    partial void OnSentChanged();
    partial void OnLastVaccDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVaccDateChanged();
    partial void OnNextVaccDateChanging(System.DateTime value);
    partial void OnNextVaccDateChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public NewPatientReminder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sent", DbType="Bit")]
		public System.Nullable<bool> Sent
		{
			get
			{
				return this._Sent;
			}
			set
			{
				if ((this._Sent != value))
				{
					this.OnSentChanging(value);
					this.SendPropertyChanging();
					this._Sent = value;
					this.SendPropertyChanged("Sent");
					this.OnSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVaccDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastVaccDate
		{
			get
			{
				return this._LastVaccDate;
			}
			set
			{
				if ((this._LastVaccDate != value))
				{
					this.OnLastVaccDateChanging(value);
					this.SendPropertyChanging();
					this._LastVaccDate = value;
					this.SendPropertyChanged("LastVaccDate");
					this.OnLastVaccDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVaccDate", DbType="DateTime NOT NULL")]
		public System.DateTime NextVaccDate
		{
			get
			{
				return this._NextVaccDate;
			}
			set
			{
				if ((this._NextVaccDate != value))
				{
					this.OnNextVaccDateChanging(value);
					this.SendPropertyChanging();
					this._NextVaccDate = value;
					this.SendPropertyChanged("NextVaccDate");
					this.OnNextVaccDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(200)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientNote")]
	public partial class PatientNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PatientID;
		
		private System.DateTime _NoteDate;
		
		private int _UserID;
		
		private string _Note;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatientIDChanging(int value);
    partial void OnPatientIDChanged();
    partial void OnNoteDateChanging(System.DateTime value);
    partial void OnNoteDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public PatientNote()
		{
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int NOT NULL")]
		public int PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteDate", DbType="DateTime NOT NULL")]
		public System.DateTime NoteDate
		{
			get
			{
				return this._NoteDate;
			}
			set
			{
				if ((this._NoteDate != value))
				{
					this.OnNoteDateChanging(value);
					this.SendPropertyChanging();
					this._NoteDate = value;
					this.SendPropertyChanged("NoteDate");
					this.OnNoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_PatientNote", Storage="_Patient", ThisKey="PatientID", OtherKey="ID", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.PatientNotes.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.PatientNotes.Add(this);
						this._PatientID = value.ID;
					}
					else
					{
						this._PatientID = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale")]
	public partial class Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _SaleDate;
		
		private string _SourceDocument;
		
		private int _TypeID;
		
		private int _CustomerID;
		
		private string _Description;
		
		private string _Comment;
		
		private decimal _AmountExclusive;
		
		private decimal _TaxAmount;
		
		private int _UserID;
		
		private int _Reference;
		
		private decimal _Total;
		
		private int _ShiftID;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private int _BranchID;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSaleDateChanging(System.DateTime value);
    partial void OnSaleDateChanged();
    partial void OnSourceDocumentChanging(string value);
    partial void OnSourceDocumentChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAmountExclusiveChanging(decimal value);
    partial void OnAmountExclusiveChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnReferenceChanging(int value);
    partial void OnReferenceChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Sale()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="DateTime NOT NULL")]
		public System.DateTime SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDocument", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SourceDocument
		{
			get
			{
				return this._SourceDocument;
			}
			set
			{
				if ((this._SourceDocument != value))
				{
					this.OnSourceDocumentChanging(value);
					this.SendPropertyChanging();
					this._SourceDocument = value;
					this.SendPropertyChanged("SourceDocument");
					this.OnSourceDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountExclusive", DbType="Money NOT NULL")]
		public decimal AmountExclusive
		{
			get
			{
				return this._AmountExclusive;
			}
			set
			{
				if ((this._AmountExclusive != value))
				{
					this.OnAmountExclusiveChanging(value);
					this.SendPropertyChanging();
					this._AmountExclusive = value;
					this.SendPropertyChanged("AmountExclusive");
					this.OnAmountExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Money NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="Int NOT NULL")]
		public int Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Sale", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Sales.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Sales.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private int _BreedID;
		
		private int _PatientGenderID;
		
		private int _PatientStatusID;
		
		private string _Name;
		
		private string _ColourMarkings;
		
		private bool _AccurateDOB;
		
		private System.DateTime _DOB;
		
		private bool _BloodDonor;
		
		private bool _AccurateDOD;
		
		private System.DateTime _DOD;
		
		private bool _Sterile;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Location;
		
		private string _Comment;
		
		private System.DateTime _CreatedDate;
		
		private string _Identification;
		
		private System.Nullable<char> _BodyScore;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private bool _Booked;
		
		private EntitySet<PatientNote> _PatientNotes;
		
		private EntitySet<Weight> _Weights;
		
		private EntityRef<Breed> _Breed;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnBreedIDChanging(int value);
    partial void OnBreedIDChanged();
    partial void OnPatientGenderIDChanging(int value);
    partial void OnPatientGenderIDChanged();
    partial void OnPatientStatusIDChanging(int value);
    partial void OnPatientStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnColourMarkingsChanging(string value);
    partial void OnColourMarkingsChanged();
    partial void OnAccurateDOBChanging(bool value);
    partial void OnAccurateDOBChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnBloodDonorChanging(bool value);
    partial void OnBloodDonorChanged();
    partial void OnAccurateDODChanging(bool value);
    partial void OnAccurateDODChanged();
    partial void OnDODChanging(System.DateTime value);
    partial void OnDODChanged();
    partial void OnSterileChanging(bool value);
    partial void OnSterileChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    partial void OnBodyScoreChanging(System.Nullable<char> value);
    partial void OnBodyScoreChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    partial void OnBookedChanging(bool value);
    partial void OnBookedChanged();
    #endregion
		
		public Patient()
		{
			this._PatientNotes = new EntitySet<PatientNote>(new Action<PatientNote>(this.attach_PatientNotes), new Action<PatientNote>(this.detach_PatientNotes));
			this._Weights = new EntitySet<Weight>(new Action<Weight>(this.attach_Weights), new Action<Weight>(this.detach_Weights));
			this._Breed = default(EntityRef<Breed>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreedID", DbType="Int NOT NULL")]
		public int BreedID
		{
			get
			{
				return this._BreedID;
			}
			set
			{
				if ((this._BreedID != value))
				{
					if (this._Breed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBreedIDChanging(value);
					this.SendPropertyChanging();
					this._BreedID = value;
					this.SendPropertyChanged("BreedID");
					this.OnBreedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientGenderID", DbType="Int NOT NULL")]
		public int PatientGenderID
		{
			get
			{
				return this._PatientGenderID;
			}
			set
			{
				if ((this._PatientGenderID != value))
				{
					this.OnPatientGenderIDChanging(value);
					this.SendPropertyChanging();
					this._PatientGenderID = value;
					this.SendPropertyChanged("PatientGenderID");
					this.OnPatientGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatusID", DbType="Int NOT NULL")]
		public int PatientStatusID
		{
			get
			{
				return this._PatientStatusID;
			}
			set
			{
				if ((this._PatientStatusID != value))
				{
					this.OnPatientStatusIDChanging(value);
					this.SendPropertyChanging();
					this._PatientStatusID = value;
					this.SendPropertyChanged("PatientStatusID");
					this.OnPatientStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColourMarkings", DbType="VarChar(100)")]
		public string ColourMarkings
		{
			get
			{
				return this._ColourMarkings;
			}
			set
			{
				if ((this._ColourMarkings != value))
				{
					this.OnColourMarkingsChanging(value);
					this.SendPropertyChanging();
					this._ColourMarkings = value;
					this.SendPropertyChanged("ColourMarkings");
					this.OnColourMarkingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccurateDOB", DbType="Bit NOT NULL")]
		public bool AccurateDOB
		{
			get
			{
				return this._AccurateDOB;
			}
			set
			{
				if ((this._AccurateDOB != value))
				{
					this.OnAccurateDOBChanging(value);
					this.SendPropertyChanging();
					this._AccurateDOB = value;
					this.SendPropertyChanged("AccurateDOB");
					this.OnAccurateDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodDonor", DbType="Bit NOT NULL")]
		public bool BloodDonor
		{
			get
			{
				return this._BloodDonor;
			}
			set
			{
				if ((this._BloodDonor != value))
				{
					this.OnBloodDonorChanging(value);
					this.SendPropertyChanging();
					this._BloodDonor = value;
					this.SendPropertyChanged("BloodDonor");
					this.OnBloodDonorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccurateDOD", DbType="Bit NOT NULL")]
		public bool AccurateDOD
		{
			get
			{
				return this._AccurateDOD;
			}
			set
			{
				if ((this._AccurateDOD != value))
				{
					this.OnAccurateDODChanging(value);
					this.SendPropertyChanging();
					this._AccurateDOD = value;
					this.SendPropertyChanged("AccurateDOD");
					this.OnAccurateDODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOD", DbType="DateTime NOT NULL")]
		public System.DateTime DOD
		{
			get
			{
				return this._DOD;
			}
			set
			{
				if ((this._DOD != value))
				{
					this.OnDODChanging(value);
					this.SendPropertyChanging();
					this._DOD = value;
					this.SendPropertyChanged("DOD");
					this.OnDODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sterile", DbType="Bit NOT NULL")]
		public bool Sterile
		{
			get
			{
				return this._Sterile;
			}
			set
			{
				if ((this._Sterile != value))
				{
					this.OnSterileChanging(value);
					this.SendPropertyChanging();
					this._Sterile = value;
					this.SendPropertyChanged("Sterile");
					this.OnSterileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="VarChar(100)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyScore", DbType="Char(1)")]
		public System.Nullable<char> BodyScore
		{
			get
			{
				return this._BodyScore;
			}
			set
			{
				if ((this._BodyScore != value))
				{
					this.OnBodyScoreChanging(value);
					this.SendPropertyChanging();
					this._BodyScore = value;
					this.SendPropertyChanged("BodyScore");
					this.OnBodyScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Booked", DbType="Bit NOT NULL")]
		public bool Booked
		{
			get
			{
				return this._Booked;
			}
			set
			{
				if ((this._Booked != value))
				{
					this.OnBookedChanging(value);
					this.SendPropertyChanging();
					this._Booked = value;
					this.SendPropertyChanged("Booked");
					this.OnBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_PatientNote", Storage="_PatientNotes", ThisKey="ID", OtherKey="PatientID")]
		public EntitySet<PatientNote> PatientNotes
		{
			get
			{
				return this._PatientNotes;
			}
			set
			{
				this._PatientNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Weight", Storage="_Weights", ThisKey="ID", OtherKey="PatientID")]
		public EntitySet<Weight> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				this._Weights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Breed_Patient", Storage="_Breed", ThisKey="BreedID", OtherKey="ID", IsForeignKey=true)]
		public Breed Breed
		{
			get
			{
				return this._Breed.Entity;
			}
			set
			{
				Breed previousValue = this._Breed.Entity;
				if (((previousValue != value) 
							|| (this._Breed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Breed.Entity = null;
						previousValue.Patients.Remove(this);
					}
					this._Breed.Entity = value;
					if ((value != null))
					{
						value.Patients.Add(this);
						this._BreedID = value.ID;
					}
					else
					{
						this._BreedID = default(int);
					}
					this.SendPropertyChanged("Breed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Patient", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Patients.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Patients.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientNotes(PatientNote entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_PatientNotes(PatientNote entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_Weights(Weight entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Weights(Weight entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerTitle")]
	public partial class CustomerTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public CustomerTitle()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTitle_Customer", Storage="_Customers", ThisKey="ID", OtherKey="TitleID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTitle = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Weight")]
	public partial class Weight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PatientID;
		
		private System.DateTime _WeighDate;
		
		private decimal _Weight1;
		
		private string _Comment;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatientIDChanging(int value);
    partial void OnPatientIDChanged();
    partial void OnWeighDateChanging(System.DateTime value);
    partial void OnWeighDateChanged();
    partial void OnWeight1Changing(decimal value);
    partial void OnWeight1Changed();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public Weight()
		{
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int NOT NULL")]
		public int PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeighDate", DbType="DateTime NOT NULL")]
		public System.DateTime WeighDate
		{
			get
			{
				return this._WeighDate;
			}
			set
			{
				if ((this._WeighDate != value))
				{
					this.OnWeighDateChanging(value);
					this.SendPropertyChanging();
					this._WeighDate = value;
					this.SendPropertyChanged("WeighDate");
					this.OnWeighDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Weight", Storage="_Weight1", DbType="Decimal(18,2) NOT NULL")]
		public decimal Weight1
		{
			get
			{
				return this._Weight1;
			}
			set
			{
				if ((this._Weight1 != value))
				{
					this.OnWeight1Changing(value);
					this.SendPropertyChanging();
					this._Weight1 = value;
					this.SendPropertyChanged("Weight1");
					this.OnWeight1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Weight", Storage="_Patient", ThisKey="PatientID", OtherKey="ID", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Weights.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Weights.Add(this);
						this._PatientID = value.ID;
					}
					else
					{
						this._PatientID = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adjustment")]
	public partial class Adjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InventoryID;
		
		private int _ReasonID;
		
		private System.Nullable<int> _BatchID;
		
		private System.Nullable<int> _PurchaseOrderDetailID;
		
		private decimal _Qty;
		
		private System.DateTime _AdjustDate;
		
		private int _UserID;
		
		private string _Reference;
		
		private string _Comment;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntityRef<Inventory> _Inventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnReasonIDChanging(int value);
    partial void OnReasonIDChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnPurchaseOrderDetailIDChanging(System.Nullable<int> value);
    partial void OnPurchaseOrderDetailIDChanged();
    partial void OnQtyChanging(decimal value);
    partial void OnQtyChanged();
    partial void OnAdjustDateChanging(System.DateTime value);
    partial void OnAdjustDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public Adjustment()
		{
			this._Inventory = default(EntityRef<Inventory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int NOT NULL")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					if (this._Inventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="Int NOT NULL")]
		public int ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDetailID", DbType="Int")]
		public System.Nullable<int> PurchaseOrderDetailID
		{
			get
			{
				return this._PurchaseOrderDetailID;
			}
			set
			{
				if ((this._PurchaseOrderDetailID != value))
				{
					this.OnPurchaseOrderDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderDetailID = value;
					this.SendPropertyChanged("PurchaseOrderDetailID");
					this.OnPurchaseOrderDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Decimal(18,4) NOT NULL")]
		public decimal Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustDate", DbType="DateTime NOT NULL")]
		public System.DateTime AdjustDate
		{
			get
			{
				return this._AdjustDate;
			}
			set
			{
				if ((this._AdjustDate != value))
				{
					this.OnAdjustDateChanging(value);
					this.SendPropertyChanging();
					this._AdjustDate = value;
					this.SendPropertyChanged("AdjustDate");
					this.OnAdjustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(MAX)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Adjustment", Storage="_Inventory", ThisKey="InventoryID", OtherKey="ID", IsForeignKey=true)]
		public Inventory Inventory
		{
			get
			{
				return this._Inventory.Entity;
			}
			set
			{
				Inventory previousValue = this._Inventory.Entity;
				if (((previousValue != value) 
							|| (this._Inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory.Entity = null;
						previousValue.Adjustments.Remove(this);
					}
					this._Inventory.Entity = value;
					if ((value != null))
					{
						value.Adjustments.Add(this);
						this._InventoryID = value.ID;
					}
					else
					{
						this._InventoryID = default(int);
					}
					this.SendPropertyChanged("Inventory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tax")]
	public partial class Tax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private decimal _Rate;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public Tax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,0) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Specie")]
	public partial class Specie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _RowVersion;
		
		private EntitySet<Breed> _Breeds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnRowVersionChanging(int value);
    partial void OnRowVersionChanged();
    #endregion
		
		public Specie()
		{
			this._Breeds = new EntitySet<Breed>(new Action<Breed>(this.attach_Breeds), new Action<Breed>(this.detach_Breeds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="Int NOT NULL")]
		public int RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specie_Breed", Storage="_Breeds", ThisKey="ID", OtherKey="SpecieID")]
		public EntitySet<Breed> Breeds
		{
			get
			{
				return this._Breeds;
			}
			set
			{
				this._Breeds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Breeds(Breed entity)
		{
			this.SendPropertyChanging();
			entity.Specie = this;
		}
		
		private void detach_Breeds(Breed entity)
		{
			this.SendPropertyChanging();
			entity.Specie = null;
		}
	}
}
#pragma warning restore 1591
